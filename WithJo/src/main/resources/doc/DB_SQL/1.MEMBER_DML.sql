--MEMBER DML

DROP TABLE MEMBER;

CREATE TABLE MEMBER(
     MEMBER_NO NUMBER(10)
    ,MEMBER_ID VARCHAR2(100) NOT NULL
    ,MEMBER_PW VARCHAR2(100) NOT NULL
    ,MEMBER_NAME VARCHAR2(100) NOT NULL
    ,MEMBER_BIRTH_DATE VARCHAR2(20) NOT NULL
    ,MEMBER_PHONE_NUM VARCHAR2(30) NOT NULL
    ,MEMBER_ZIP_CODE VARCHAR2(20) NOT NULL
    ,MEMBER_ADDRESS VARCHAR2(200) NOT NULL
    ,MEMBER_ADDRESS_INFO VARCHAR2(200)
    ,MEMBER_GENDER NUMBER(4) NOT NULL
    ,MEMBER_CREDATE DATE DEFAULT SYSDATE
    ,MEMBER_UPDATE DATE DEFAULT SYSDATE
    ,MEMBER_E_MONEY NUMBER(30) DEFAULT 0
    ,AUTHORITY NUMBER(10) DEFAULT 0 
    ,CONSTRAINT MEMBER_NO_PK PRIMARY KEY (MEMBER_NO)
    ,CONSTRAINT MEMBER_ID_UK UNIQUE (MEMBER_ID)
    ,CONSTRAINT MEMBER_PHONE_NUM_UK UNIQUE (MEMBER_PHONE_NUM)
);

DROP SEQUENCE MEMBER_NO_SEQ;

CREATE SEQUENCE MEMBER_NO_SEQ
INCREMENT BY 1
START WITH 1; 

SELECT *
FROM DBA_SEQUENCES
WHERE SEQUENCE_NAME = 'MEMBER_NO_SEQ';

INSERT INTO MEMBER(MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_NAME, MEMBER_BIRTH_DATE, MEMBER_PHONE_NUM, MEMBER_ZIP_CODE, MEMBER_ADDRESS, MEMBER_ADDRESS_INFO
                   ,MEMBER_GENDER, MEMBER_E_MONEY, AUTHORITY)
VALUES(MEMBER_NO_SEQ.NEXTVAL, 'admin', 'admin1234', '관리자', '19960227', '01064348673', '08545', '구로구 구로동', '구로아카데미', '1', 0, '1');

INSERT INTO MEMBER(MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_NAME, MEMBER_BIRTH_DATE, MEMBER_PHONE_NUM, MEMBER_ZIP_CODE, MEMBER_ADDRESS, MEMBER_ADDRESS_INFO
                   ,MEMBER_GENDER, MEMBER_E_MONEY, AUTHORITY)
VALUES(MEMBER_NO_SEQ.NEXTVAL, 'qwer', 'qwer1234', '김진우', '19900713', '01057465124', '08545', '구로구 구로동', '구로아카데미', '1', 0, '0');

INSERT INTO MEMBER(MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_NAME, MEMBER_BIRTH_DATE, MEMBER_PHONE_NUM, MEMBER_ZIP_CODE, MEMBER_ADDRESS, MEMBER_ADDRESS_INFO
                   ,MEMBER_GENDER, MEMBER_E_MONEY, AUTHORITY)
VALUES(MEMBER_NO_SEQ.NEXTVAL, 'asdf', 'asdf1234', '이수영', '19970713', '01095745124', '08545', '구로구 구로동', '구로아카데미', '2', 0, '0');

CREATE OR REPLACE TRIGGER UPDATE_MEMBER_E_MONEY
AFTER INSERT ON MEMBER_E_MONEY
FOR EACH ROW
BEGIN
    UPDATE MEMBER
    SET MEMBER_E_MONEY = MEMBER_E_MONEY + :NEW.MEMBER_E_MONEY_PLUS - :NEW.MEMBER_E_MONEY_MINUS
    WHERE MEMBER_NO = :NEW.MEMBER_NO;
END;
/





SELECT *
FROM MEMBER;

SELECT MEMBER_NO
      ,MEMBER_ID
      ,MEMBER_PW
      ,MEMBER_NAME
      ,MEMBER_BIRTH_DATE
      ,MEMBER_ZIP_CODE
      ,MEMBER_ADDRESS
      ,MEMBER_ADDRESS_INFO
      ,MEMBER_GENDER
      ,MEMBER_CREDATE
      ,MEMBER_UPDATE
      ,MEMBER_E_MONEY
      ,AUTHORITY
FROM MEMBER;

commit;


