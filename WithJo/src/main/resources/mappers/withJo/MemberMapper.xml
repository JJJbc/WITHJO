<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.withJo.member">

	<resultMap type="memberVo" id="memberResultMap">
		<id column="MEMBER_NO" property="memberNo"/>
		<result column="MEMBER_ID" property="memberId"/>
		<result column="MEMBER_PW" property="memberPw"/>
		<result column="MEMBER_NAME" property="memberName"/>
		<result column="MEMBER_BIRTH_DATE" property="memberBirthDate"/>
		<result column="MEMBER_GENDER" property="memberGender"/>
		<result column="MEMBER_PHONE_NUM" property="memberPhoneNum"/>
		<result column="MEMBER_ZIP_CODE" property="memberZipCode"/>
		<result column="MEMBER_ADDRESS" property="memberAddress"/>
		<result column="MEMBER_ADDRESS_INFO" property="memberAddressInfo"/>		
		<result column="MEMBER_CREDATE" property="memberCredate"/>
		<result column="MEMBER_UPDATE" property="memberUpdate"/>
		<result column="MEMBER_E_MONEY" property="memberEMoney"/>
		<result column="MEMBER_COURSE_RESERVE_NO" property="memberCourseReserveNo"/>		
		<result column="COURSE_MAIN_IMAGE" property="courseMainImage"/>		
		<result column="COURSE_NAME" property="courseName"/>		
		<result column="COURSE_DAY_OF_THE_WEEK" property="courseDayOfTheWeek"/>		
		<result column="COURSE_START_DATE" property="courseStartDate"/>		
		<result column="COURSE_END_DATE" property="courseEndDate"/>		
		<result column="COURSE_START_TIME" property="courseStartTime"/>		
		<result column="COURSE_END_TIME" property="courseEndTime"/>		
		<result column="COURSE_TEACHER" property="courseTeacher"/>
		<result column="MEMBER_E_MONEY_PLUS" property="memberEMoneyPlus"/>
		<result column="MEMBER_E_MONEY_PLUS_DETAIL" property="memberEMoneyPlusDetail"/>
		<result column="MEMBER_E_MONEY_MINUS" property="memberEMoneyMinus"/>
		<result column="MEMBER_E_MONEY_MINUS_DETAIL" property="memberEMoneyMinusDetail"/>
		<result column="MEMBER_E_MONEY_UPDATE" property="memberEMoneyUpdate"/>		
	</resultMap>
	
	<sql id="search">
		<choose>
			<when test="searchField == 'all'">
				AND (MEMBER_ID LIKE '%' || #{searchKeyword} || '%'
				OR MEMBER_NAME LIKE '%' || #{searchKeyword} || '%')
			</when>
			<when test="searchField == 'memberId'">
				AND (MEMBER_ID LIKE '%' || #{searchKeyword} || '%')
			</when>
			<when test="searchField == 'memberName'">
				AND (MEMBER_NAME LIKE '%' || #{searchKeyword} || '%')
			</when>
			<otherwise>
			</otherwise>
		</choose>
	</sql>
	
	<select id="memberSelectList" parameterType="map" resultMap="memberResultMap">
	   SELECT * FROM (
	        SELECT ROWNUM AS RN, TA.*
	        FROM (
	            SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME, MEMBER_BIRTH_DATE, MEMBER_PHONE_NUM, MEMBER_ZIP_CODE, MEMBER_ADDRESS,
				MEMBER_ADDRESS_INFO, MEMBER_GENDER, MEMBER_CREDATE, MEMBER_UPDATE, MEMBER_E_MONEY, AUTHORITY
				FROM MEMBER	            
	            <where>
					<include refid="search"/>
				</where>
	            ORDER BY MEMBER_NO ASC
	        ) TA
	    ) 
	    WHERE RN BETWEEN #{start} AND #{end}
	</select>
	
	<select id="memberTotalCount" resultType="java.lang.Integer">
		SELECT COUNT(*) AS totalCount
		FROM MEMBER
		<where>
			<include refid="search"/>
		</where>
	</select>
	
	<select id="memberExist" parameterType="memberVo" resultMap="memberResultMap">
		SELECT *
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
		AND MEMBER_PW = #{memberPw}
	</select>
	
	<insert id="memberInsertOne" parameterType="memberVo">
		INSERT INTO MEMBER(MEMBER_NO, MEMBER_ID, MEMBER_PW, MEMBER_NAME, MEMBER_BIRTH_DATE, MEMBER_GENDER, MEMBER_PHONE_NUM, MEMBER_ZIP_CODE,
							MEMBER_ADDRESS, MEMBER_ADDRESS_INFO)
		VALUES(MEMBER_NO_SEQ.NEXTVAL, #{memberId}, #{memberPw}, #{memberName}, #{memberBirthDate}, #{memberGender}, #{memberPhoneNum},
							#{memberZipCode}, #{memberAddress}, #{memberAddressInfo})
	</insert>
	
	<select id="memberSelectOne" parameterType="int" resultMap="memberResultMap">
		SELECT MEMBER_NO, MEMBER_ID, MEMBER_NAME, MEMBER_BIRTH_DATE, MEMBER_GENDER, MEMBER_PHONE_NUM, MEMBER_ZIP_CODE, MEMBER_ADDRESS, MEMBER_ADDRESS_INFO, MEMBER_E_MONEY, AUTHORITY
		FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<update id="memberUpdateOne" parameterType="memberVo">
		UPDATE MEMBER
		<set>		
			<if test="memberPw != null">MEMBER_PW= #{memberPw},</if>			
			<if test="memberZipCode != ''">MEMBER_ZIP_CODE = #{memberZipCode},</if>
			<if test="memberAddress != ''">MEMBER_ADDRESS = #{memberAddress},</if>
			MEMBER_ADDRESS_INFO = #{memberAddressInfo},
			<if test="authority != null">AUTHORITY = #{authority},</if>
			MEMBER_UPDATE = SYSDATE
		</set>
		WHERE MEMBER_NO = #{memberNo}
	</update>
	
	<select id="countByMemberId" resultType="int">
		SELECT COUNT(*)
		FROM MEMBER
		WHERE MEMBER_ID = #{memberId}
	</select>
	
	<delete id="memberDeleteOne" parameterType="int">
		DELETE FROM MEMBER
		WHERE MEMBER_NO = #{memberNo}
	</delete>
	
	<select id="memberFindIdByName" parameterType="string" resultType="string">
		SELECT MEMBER_ID
 	    FROM MEMBER
  	    WHERE MEMBER_NAME = #{memberName}
	</select>
	
	<select id="memberFindByNameAndId" resultMap="memberResultMap">
        SELECT * FROM MEMBER 
        WHERE MEMBER_NAME = #{memberName} AND MEMBER_ID = #{memberId}
    </select>

    <update id="memberPwUpdate">
        UPDATE MEMBER 
        SET MEMBER_PW = #{memberPw, jdbcType=VARCHAR}
  		WHERE MEMBER_ID = #{memberId, jdbcType=VARCHAR}
   		AND MEMBER_NAME = #{memberName, jdbcType=VARCHAR}
    </update>
    
    <select id="memberReserveOne" parameterType="int" resultMap="memberResultMap">
		SELECT MCR.MEMBER_COURSE_RESERVE_NO, M.MEMBER_NO, CL.COURSE_NO
		      ,CL.COURSE_MAIN_IMAGE
		      ,CL.COURSE_NAME
		      ,CLD.COURSE_DAY_OF_THE_WEEK
		      ,CL.COURSE_START_DATE
		      ,CL.COURSE_END_DATE
		      ,CL.COURSE_START_TIME
		      ,CL.COURSE_END_TIME
		      ,CL.COURSE_TEACHER
		FROM MEMBER_COURSE_RESERVE MCR
		JOIN MEMBER M ON MCR.MEMBER_NO = M. MEMBER_NO
		JOIN COURSE_LIST CL ON MCR.COURSE_NO = CL.COURSE_NO
		JOIN COURSE_LIST_DAY CLD ON CL.COURSE_NO = CLD.COURSE_NO
		JOIN CATEGORY C ON MCR.CATEGORY_NO = C.CATEGORY_NO
		WHERE M.MEMBER_NO = #{memberNo}
	</select>
	
	<delete id="memberCourseReserveNo" parameterType="map">
		DELETE FROM MEMBER_COURSE_RESERVE
		WHERE MEMBER_NO = #{memberNo}
		AND MEMBER_COURSE_RESERVE_NO = #{memberCourseReserveNo}
	</delete>
	
	<select id="memberEMoneyDetail" parameterType="int" resultMap="memberResultMap">
		SELECT M.MEMBER_NO
			  ,M.MEMBER_E_MONEY
			  ,MONEY.MEMBER_E_MONEY_NO
			  ,MONEY.MEMBER_E_MONEY_PLUS
			  ,MONEY.MEMBER_E_MONEY_PLUS_DETAIL
			  ,MONEY.MEMBER_E_MONEY_MINUS
			  ,MONEY.MEMBER_E_MONEY_MINUS_DETAIL			  
			  ,MONEY.MEMBER_E_MONEY_UPDATE
		FROM MEMBER M
		LEFT JOIN MEMBER_E_MONEY MONEY ON M.MEMBER_NO = MONEY.MEMBER_NO
		WHERE M.MEMBER_NO = #{memberNo}
		ORDER BY MONEY.MEMBER_E_MONEY_UPDATE DESC	
	</select>

</mapper>